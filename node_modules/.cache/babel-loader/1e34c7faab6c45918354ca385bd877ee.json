{"ast":null,"code":"import { inheritsLoose as _inheritsLoose, wrapNativeSuper as _wrapNativeSuper } from './_virtual/_rollupPluginBabelHelpers.js';\nvar ERROR_CODES = {\n  MISSING_PARAMETER: 'missing_parameter',\n  REMOTE_SERVICE_ERROR: 'remote_service_error',\n  INVALID_STATE: 'invalid_state',\n  NO_SESSION_DATA: 'no_session_data',\n  DOES_NOT_EXIST: 'does_not_exist',\n  FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n  INVALID_DID_ERROR: 'invalid_did_error',\n  NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n  INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n  LOGIN_FAILED_ERROR: 'login_failed',\n  SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n  CONFLICT_ERROR: 'conflict_error',\n  NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n  BAD_PATH_ERROR: 'bad_path_error',\n  VALIDATION_ERROR: 'validation_error',\n  PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n  PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n  UNKNOWN: 'unknown'\n};\nObject.freeze(ERROR_CODES);\n\nvar BlockstackError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(BlockstackError, _Error);\n\n  function BlockstackError(error) {\n    var _this;\n\n    _this = _Error.call(this) || this;\n    var message = error.message;\n    var bugDetails = \"Error Code: \" + error.code;\n    var stack = _this.stack;\n\n    if (!stack) {\n      try {\n        throw new Error();\n      } catch (e) {\n        stack = e.stack;\n      }\n    } else {\n      bugDetails += \"Stack Trace:\\n\" + stack;\n    }\n\n    message += \"\\nIf you believe this exception is caused by a bug in blockstack.js,\\n      please file a bug report: https://github.com/blockstack/blockstack.js/issues\\n\\n\" + bugDetails;\n    _this.message = message;\n    _this.code = error.code;\n    _this.parameter = error.parameter ? error.parameter : undefined;\n    return _this;\n  }\n\n  var _proto = BlockstackError.prototype;\n\n  _proto.toString = function toString() {\n    return _Error.prototype.toString.call(this) + \"\\n    code: \" + this.code + \" param: \" + (this.parameter ? this.parameter : 'n/a');\n  };\n\n  return BlockstackError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar InvalidParameterError = /*#__PURE__*/function (_BlockstackError) {\n  _inheritsLoose(InvalidParameterError, _BlockstackError);\n\n  function InvalidParameterError(parameter, message) {\n    var _this2;\n\n    if (message === void 0) {\n      message = '';\n    }\n\n    _this2 = _BlockstackError.call(this, {\n      code: ERROR_CODES.MISSING_PARAMETER,\n      message: message,\n      parameter: parameter\n    }) || this;\n    _this2.name = 'MissingParametersError';\n    return _this2;\n  }\n\n  return InvalidParameterError;\n}(BlockstackError);\n\nvar MissingParameterError = /*#__PURE__*/function (_BlockstackError2) {\n  _inheritsLoose(MissingParameterError, _BlockstackError2);\n\n  function MissingParameterError(parameter, message) {\n    var _this3;\n\n    if (message === void 0) {\n      message = '';\n    }\n\n    _this3 = _BlockstackError2.call(this, {\n      code: ERROR_CODES.MISSING_PARAMETER,\n      message: message,\n      parameter: parameter\n    }) || this;\n    _this3.name = 'MissingParametersError';\n    return _this3;\n  }\n\n  return MissingParameterError;\n}(BlockstackError);\n\nvar RemoteServiceError = /*#__PURE__*/function (_BlockstackError3) {\n  _inheritsLoose(RemoteServiceError, _BlockstackError3);\n\n  function RemoteServiceError(response, message) {\n    var _this4;\n\n    if (message === void 0) {\n      message = '';\n    }\n\n    _this4 = _BlockstackError3.call(this, {\n      code: ERROR_CODES.REMOTE_SERVICE_ERROR,\n      message: message\n    }) || this;\n    _this4.response = response;\n    return _this4;\n  }\n\n  return RemoteServiceError;\n}(BlockstackError);\n\nvar InvalidDIDError = /*#__PURE__*/function (_BlockstackError4) {\n  _inheritsLoose(InvalidDIDError, _BlockstackError4);\n\n  function InvalidDIDError(message) {\n    var _this5;\n\n    if (message === void 0) {\n      message = '';\n    }\n\n    _this5 = _BlockstackError4.call(this, {\n      code: ERROR_CODES.INVALID_DID_ERROR,\n      message: message\n    }) || this;\n    _this5.name = 'InvalidDIDError';\n    return _this5;\n  }\n\n  return InvalidDIDError;\n}(BlockstackError);\n\nvar NotEnoughFundsError = /*#__PURE__*/function (_BlockstackError5) {\n  _inheritsLoose(NotEnoughFundsError, _BlockstackError5);\n\n  function NotEnoughFundsError(leftToFund) {\n    var _this6;\n\n    var message = \"Not enough UTXOs to fund. Left to fund: \" + leftToFund;\n    _this6 = _BlockstackError5.call(this, {\n      code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR,\n      message: message\n    }) || this;\n    _this6.leftToFund = leftToFund;\n    _this6.name = 'NotEnoughFundsError';\n    _this6.message = message;\n    return _this6;\n  }\n\n  return NotEnoughFundsError;\n}(BlockstackError);\n\nvar InvalidAmountError = /*#__PURE__*/function (_BlockstackError6) {\n  _inheritsLoose(InvalidAmountError, _BlockstackError6);\n\n  function InvalidAmountError(fees, specifiedAmount) {\n    var _this7;\n\n    var message = \"Not enough coin to fund fees transaction fees. Fees would be \" + fees + \",\" + (\" specified spend is  \" + specifiedAmount);\n    _this7 = _BlockstackError6.call(this, {\n      code: ERROR_CODES.INVALID_AMOUNT_ERROR,\n      message: message\n    }) || this;\n    _this7.specifiedAmount = specifiedAmount;\n    _this7.fees = fees;\n    _this7.name = 'InvalidAmountError';\n    _this7.message = message;\n    return _this7;\n  }\n\n  return InvalidAmountError;\n}(BlockstackError);\n\nvar LoginFailedError = /*#__PURE__*/function (_BlockstackError7) {\n  _inheritsLoose(LoginFailedError, _BlockstackError7);\n\n  function LoginFailedError(reason) {\n    var _this8;\n\n    var message = \"Failed to login: \" + reason;\n    _this8 = _BlockstackError7.call(this, {\n      code: ERROR_CODES.LOGIN_FAILED_ERROR,\n      message: message\n    }) || this;\n    _this8.message = message;\n    _this8.name = 'LoginFailedError';\n    return _this8;\n  }\n\n  return LoginFailedError;\n}(BlockstackError);\n\nvar SignatureVerificationError = /*#__PURE__*/function (_BlockstackError8) {\n  _inheritsLoose(SignatureVerificationError, _BlockstackError8);\n\n  function SignatureVerificationError(reason) {\n    var _this9;\n\n    var message = \"Failed to verify signature: \" + reason;\n    _this9 = _BlockstackError8.call(this, {\n      code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR,\n      message: message\n    }) || this;\n    _this9.message = message;\n    _this9.name = 'SignatureVerificationError';\n    return _this9;\n  }\n\n  return SignatureVerificationError;\n}(BlockstackError);\n\nvar FailedDecryptionError = /*#__PURE__*/function (_BlockstackError9) {\n  _inheritsLoose(FailedDecryptionError, _BlockstackError9);\n\n  function FailedDecryptionError(message) {\n    var _this10;\n\n    if (message === void 0) {\n      message = 'Unable to decrypt cipher object.';\n    }\n\n    _this10 = _BlockstackError9.call(this, {\n      code: ERROR_CODES.FAILED_DECRYPTION_ERROR,\n      message: message\n    }) || this;\n    _this10.message = message;\n    _this10.name = 'FailedDecryptionError';\n    return _this10;\n  }\n\n  return FailedDecryptionError;\n}(BlockstackError);\n\nvar InvalidStateError = /*#__PURE__*/function (_BlockstackError10) {\n  _inheritsLoose(InvalidStateError, _BlockstackError10);\n\n  function InvalidStateError(message) {\n    var _this11;\n\n    _this11 = _BlockstackError10.call(this, {\n      code: ERROR_CODES.INVALID_STATE,\n      message: message\n    }) || this;\n    _this11.message = message;\n    _this11.name = 'InvalidStateError';\n    return _this11;\n  }\n\n  return InvalidStateError;\n}(BlockstackError);\n\nvar NoSessionDataError = /*#__PURE__*/function (_BlockstackError11) {\n  _inheritsLoose(NoSessionDataError, _BlockstackError11);\n\n  function NoSessionDataError(message) {\n    var _this12;\n\n    _this12 = _BlockstackError11.call(this, {\n      code: ERROR_CODES.INVALID_STATE,\n      message: message\n    }) || this;\n    _this12.message = message;\n    _this12.name = 'NoSessionDataError';\n    return _this12;\n  }\n\n  return NoSessionDataError;\n}(BlockstackError);\n\nvar GaiaHubError = /*#__PURE__*/function (_BlockstackError12) {\n  _inheritsLoose(GaiaHubError, _BlockstackError12);\n\n  function GaiaHubError(error, response) {\n    var _this13;\n\n    _this13 = _BlockstackError12.call(this, error) || this;\n\n    if (response) {\n      _this13.hubError = {\n        statusCode: response.status,\n        statusText: response.statusText\n      };\n\n      if (typeof response.body === 'string') {\n        _this13.hubError.message = response.body;\n      } else if (typeof response.body === 'object') {\n        Object.assign(_this13.hubError, response.body);\n      }\n    }\n\n    return _this13;\n  }\n\n  return GaiaHubError;\n}(BlockstackError);\n\nvar DoesNotExist = /*#__PURE__*/function (_GaiaHubError) {\n  _inheritsLoose(DoesNotExist, _GaiaHubError);\n\n  function DoesNotExist(message, response) {\n    var _this14;\n\n    _this14 = _GaiaHubError.call(this, {\n      message: message,\n      code: ERROR_CODES.DOES_NOT_EXIST\n    }, response) || this;\n    _this14.name = 'DoesNotExist';\n    return _this14;\n  }\n\n  return DoesNotExist;\n}(GaiaHubError);\n\nvar ConflictError = /*#__PURE__*/function (_GaiaHubError2) {\n  _inheritsLoose(ConflictError, _GaiaHubError2);\n\n  function ConflictError(message, response) {\n    var _this15;\n\n    _this15 = _GaiaHubError2.call(this, {\n      message: message,\n      code: ERROR_CODES.CONFLICT_ERROR\n    }, response) || this;\n    _this15.name = 'ConflictError';\n    return _this15;\n  }\n\n  return ConflictError;\n}(GaiaHubError);\n\nvar NotEnoughProofError = /*#__PURE__*/function (_GaiaHubError3) {\n  _inheritsLoose(NotEnoughProofError, _GaiaHubError3);\n\n  function NotEnoughProofError(message, response) {\n    var _this16;\n\n    _this16 = _GaiaHubError3.call(this, {\n      message: message,\n      code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR\n    }, response) || this;\n    _this16.name = 'NotEnoughProofError';\n    return _this16;\n  }\n\n  return NotEnoughProofError;\n}(GaiaHubError);\n\nvar BadPathError = /*#__PURE__*/function (_GaiaHubError4) {\n  _inheritsLoose(BadPathError, _GaiaHubError4);\n\n  function BadPathError(message, response) {\n    var _this17;\n\n    _this17 = _GaiaHubError4.call(this, {\n      message: message,\n      code: ERROR_CODES.BAD_PATH_ERROR\n    }, response) || this;\n    _this17.name = 'BadPathError';\n    return _this17;\n  }\n\n  return BadPathError;\n}(GaiaHubError);\n\nvar ValidationError = /*#__PURE__*/function (_GaiaHubError5) {\n  _inheritsLoose(ValidationError, _GaiaHubError5);\n\n  function ValidationError(message, response) {\n    var _this18;\n\n    _this18 = _GaiaHubError5.call(this, {\n      message: message,\n      code: ERROR_CODES.VALIDATION_ERROR\n    }, response) || this;\n    _this18.name = 'ValidationError';\n    return _this18;\n  }\n\n  return ValidationError;\n}(GaiaHubError);\n\nvar PayloadTooLargeError = /*#__PURE__*/function (_GaiaHubError6) {\n  _inheritsLoose(PayloadTooLargeError, _GaiaHubError6);\n\n  function PayloadTooLargeError(message, response, maxUploadByteSize) {\n    var _this19;\n\n    _this19 = _GaiaHubError6.call(this, {\n      message: message,\n      code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR\n    }, response) || this;\n    _this19.name = 'PayloadTooLargeError';\n    _this19.maxUploadByteSize = maxUploadByteSize;\n    return _this19;\n  }\n\n  return PayloadTooLargeError;\n}(GaiaHubError);\n\nvar PreconditionFailedError = /*#__PURE__*/function (_GaiaHubError7) {\n  _inheritsLoose(PreconditionFailedError, _GaiaHubError7);\n\n  function PreconditionFailedError(message, response) {\n    var _this20;\n\n    _this20 = _GaiaHubError7.call(this, {\n      message: message,\n      code: ERROR_CODES.PRECONDITION_FAILED_ERROR\n    }, response) || this;\n    _this20.name = 'PreconditionFailedError';\n    return _this20;\n  }\n\n  return PreconditionFailedError;\n}(GaiaHubError);\n\nexport { BadPathError, BlockstackError, ConflictError, DoesNotExist, ERROR_CODES, FailedDecryptionError, GaiaHubError, InvalidAmountError, InvalidDIDError, InvalidParameterError, InvalidStateError, LoginFailedError, MissingParameterError, NoSessionDataError, NotEnoughFundsError, NotEnoughProofError, PayloadTooLargeError, PreconditionFailedError, RemoteServiceError, SignatureVerificationError, ValidationError };","map":{"version":3,"sources":["../src/errors.ts"],"names":["ERROR_CODES","MISSING_PARAMETER","REMOTE_SERVICE_ERROR","INVALID_STATE","NO_SESSION_DATA","DOES_NOT_EXIST","FAILED_DECRYPTION_ERROR","INVALID_DID_ERROR","NOT_ENOUGH_FUNDS_ERROR","INVALID_AMOUNT_ERROR","LOGIN_FAILED_ERROR","SIGNATURE_VERIFICATION_ERROR","CONFLICT_ERROR","NOT_ENOUGH_PROOF_ERROR","BAD_PATH_ERROR","VALIDATION_ERROR","PAYLOAD_TOO_LARGE_ERROR","PRECONDITION_FAILED_ERROR","UNKNOWN","Object","BlockstackError","message","error","bugDetails","stack","e","toString","InvalidParameterError","code","parameter","MissingParameterError","RemoteServiceError","InvalidDIDError","NotEnoughFundsError","InvalidAmountError","LoginFailedError","SignatureVerificationError","FailedDecryptionError","InvalidStateError","NoSessionDataError","GaiaHubError","statusCode","response","statusText","DoesNotExist","ConflictError","NotEnoughProofError","BadPathError","ValidationError","PayloadTooLargeError","PreconditionFailedError"],"mappings":"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","sourcesContent":["/**\n * @ignore\n */\nexport const ERROR_CODES = {\n  MISSING_PARAMETER: 'missing_parameter',\n  REMOTE_SERVICE_ERROR: 'remote_service_error',\n  INVALID_STATE: 'invalid_state',\n  NO_SESSION_DATA: 'no_session_data',\n  DOES_NOT_EXIST: 'does_not_exist',\n  FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n  INVALID_DID_ERROR: 'invalid_did_error',\n  NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n  INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n  LOGIN_FAILED_ERROR: 'login_failed',\n  SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n  CONFLICT_ERROR: 'conflict_error',\n  NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n  BAD_PATH_ERROR: 'bad_path_error',\n  VALIDATION_ERROR: 'validation_error',\n  PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n  PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n  UNKNOWN: 'unknown',\n};\n\nObject.freeze(ERROR_CODES);\n\n/**\n * @ignore\n */\ntype ErrorData = {\n  code: string;\n  parameter?: string;\n  message: string;\n};\n\n/**\n * @ignore\n */\nexport class BlockstackError extends Error {\n  message: string;\n\n  code: string;\n\n  parameter?: string;\n\n  constructor(error: ErrorData) {\n    super();\n    let message = error.message;\n    let bugDetails = `Error Code: ${error.code}`;\n    let stack = this.stack;\n    if (!stack) {\n      try {\n        throw new Error();\n      } catch (e) {\n        stack = e.stack;\n      }\n    } else {\n      bugDetails += `Stack Trace:\\n${stack}`;\n    }\n    message += `\\nIf you believe this exception is caused by a bug in blockstack.js,\n      please file a bug report: https://github.com/blockstack/blockstack.js/issues\\n\\n${bugDetails}`;\n    this.message = message;\n    this.code = error.code;\n    this.parameter = error.parameter ? error.parameter : undefined;\n  }\n\n  toString() {\n    return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidParameterError extends BlockstackError {\n  constructor(parameter: string, message: string = '') {\n    super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n    this.name = 'MissingParametersError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class MissingParameterError extends BlockstackError {\n  constructor(parameter: string, message: string = '') {\n    super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n    this.name = 'MissingParametersError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class RemoteServiceError extends BlockstackError {\n  response: Response;\n\n  constructor(response: Response, message: string = '') {\n    super({ code: ERROR_CODES.REMOTE_SERVICE_ERROR, message });\n    this.response = response;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidDIDError extends BlockstackError {\n  constructor(message: string = '') {\n    super({ code: ERROR_CODES.INVALID_DID_ERROR, message });\n    this.name = 'InvalidDIDError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NotEnoughFundsError extends BlockstackError {\n  leftToFund: number;\n\n  constructor(leftToFund: number) {\n    const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n    super({ code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR, message });\n    this.leftToFund = leftToFund;\n    this.name = 'NotEnoughFundsError';\n    this.message = message;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidAmountError extends BlockstackError {\n  fees: number;\n\n  specifiedAmount: number;\n\n  constructor(fees: number, specifiedAmount: number) {\n    const message =\n      `Not enough coin to fund fees transaction fees. Fees would be ${fees},` +\n      ` specified spend is  ${specifiedAmount}`;\n    super({ code: ERROR_CODES.INVALID_AMOUNT_ERROR, message });\n    this.specifiedAmount = specifiedAmount;\n    this.fees = fees;\n    this.name = 'InvalidAmountError';\n    this.message = message;\n  }\n}\n\n/**\n * @ignore\n */\nexport class LoginFailedError extends BlockstackError {\n  constructor(reason: string) {\n    const message = `Failed to login: ${reason}`;\n    super({ code: ERROR_CODES.LOGIN_FAILED_ERROR, message });\n    this.message = message;\n    this.name = 'LoginFailedError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class SignatureVerificationError extends BlockstackError {\n  constructor(reason: string) {\n    const message = `Failed to verify signature: ${reason}`;\n    super({ code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR, message });\n    this.message = message;\n    this.name = 'SignatureVerificationError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class FailedDecryptionError extends BlockstackError {\n  constructor(message: string = 'Unable to decrypt cipher object.') {\n    super({ code: ERROR_CODES.FAILED_DECRYPTION_ERROR, message });\n    this.message = message;\n    this.name = 'FailedDecryptionError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidStateError extends BlockstackError {\n  constructor(message: string) {\n    super({ code: ERROR_CODES.INVALID_STATE, message });\n    this.message = message;\n    this.name = 'InvalidStateError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NoSessionDataError extends BlockstackError {\n  constructor(message: string) {\n    super({ code: ERROR_CODES.INVALID_STATE, message });\n    this.message = message;\n    this.name = 'NoSessionDataError';\n  }\n}\n\n/**\n * @ignore\n */\nexport interface GaiaHubErrorResponse {\n  status: number;\n  statusText: string;\n  body?: string | any;\n}\n\nexport interface HubErrorDetails {\n  message?: string;\n  statusCode: number;\n  statusText: string;\n  [prop: string]: any;\n}\n\n/**\n * @ignore\n */\nexport class GaiaHubError extends BlockstackError {\n  hubError?: HubErrorDetails;\n\n  constructor(error: ErrorData, response: GaiaHubErrorResponse) {\n    super(error);\n    if (response) {\n      this.hubError = {\n        statusCode: response.status,\n        statusText: response.statusText,\n      };\n      if (typeof response.body === 'string') {\n        this.hubError.message = response.body;\n      } else if (typeof response.body === 'object') {\n        Object.assign(this.hubError, response.body);\n      }\n    }\n  }\n}\n\n/**\n * @ignore\n */\nexport class DoesNotExist extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.DOES_NOT_EXIST }, response);\n    this.name = 'DoesNotExist';\n  }\n}\n\n/**\n * @ignore\n */\nexport class ConflictError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.CONFLICT_ERROR }, response);\n    this.name = 'ConflictError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NotEnoughProofError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR }, response);\n    this.name = 'NotEnoughProofError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class BadPathError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.BAD_PATH_ERROR }, response);\n    this.name = 'BadPathError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class ValidationError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.VALIDATION_ERROR }, response);\n    this.name = 'ValidationError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class PayloadTooLargeError extends GaiaHubError {\n  /** Can be `null` when an oversized payload is detected client-side. */\n  hubError?: HubErrorDetails;\n\n  maxUploadByteSize: number;\n\n  constructor(message: string, response: GaiaHubErrorResponse | null, maxUploadByteSize: number) {\n    super({ message, code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR }, response!);\n    this.name = 'PayloadTooLargeError';\n    this.maxUploadByteSize = maxUploadByteSize;\n  }\n}\n\n/**\n * @ignore\n */\nexport class PreconditionFailedError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.PRECONDITION_FAILED_ERROR }, response);\n    this.name = 'PreconditionFailedError';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}