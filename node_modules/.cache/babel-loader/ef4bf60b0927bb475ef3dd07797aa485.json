{"ast":null,"code":"export const ERROR_CODES = {\n  MISSING_PARAMETER: 'missing_parameter',\n  REMOTE_SERVICE_ERROR: 'remote_service_error',\n  INVALID_STATE: 'invalid_state',\n  NO_SESSION_DATA: 'no_session_data',\n  DOES_NOT_EXIST: 'does_not_exist',\n  FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n  INVALID_DID_ERROR: 'invalid_did_error',\n  NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n  INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n  LOGIN_FAILED_ERROR: 'login_failed',\n  SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n  CONFLICT_ERROR: 'conflict_error',\n  NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n  BAD_PATH_ERROR: 'bad_path_error',\n  VALIDATION_ERROR: 'validation_error',\n  PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n  PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n  UNKNOWN: 'unknown'\n};\nObject.freeze(ERROR_CODES);\nexport class BlockstackError extends Error {\n  constructor(error) {\n    super();\n    let message = error.message;\n    let bugDetails = `Error Code: ${error.code}`;\n    let stack = this.stack;\n\n    if (!stack) {\n      try {\n        throw new Error();\n      } catch (e) {\n        stack = e.stack;\n      }\n    } else {\n      bugDetails += `Stack Trace:\\n${stack}`;\n    }\n\n    message += `\\nIf you believe this exception is caused by a bug in stacks.js,\n      please file a bug report: https://github.com/blockstack/stacks.js/issues\\n\\n${bugDetails}`;\n    this.message = message;\n    this.code = error.code;\n    this.parameter = error.parameter ? error.parameter : undefined;\n  }\n\n  toString() {\n    return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n  }\n\n}\nexport class InvalidParameterError extends BlockstackError {\n  constructor(parameter, message = '') {\n    super({\n      code: ERROR_CODES.MISSING_PARAMETER,\n      message,\n      parameter\n    });\n    this.name = 'MissingParametersError';\n  }\n\n}\nexport class MissingParameterError extends BlockstackError {\n  constructor(parameter, message = '') {\n    super({\n      code: ERROR_CODES.MISSING_PARAMETER,\n      message,\n      parameter\n    });\n    this.name = 'MissingParametersError';\n  }\n\n}\nexport class RemoteServiceError extends BlockstackError {\n  constructor(response, message = '') {\n    super({\n      code: ERROR_CODES.REMOTE_SERVICE_ERROR,\n      message\n    });\n    this.response = response;\n  }\n\n}\nexport class InvalidDIDError extends BlockstackError {\n  constructor(message = '') {\n    super({\n      code: ERROR_CODES.INVALID_DID_ERROR,\n      message\n    });\n    this.name = 'InvalidDIDError';\n  }\n\n}\nexport class NotEnoughFundsError extends BlockstackError {\n  constructor(leftToFund) {\n    const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n    super({\n      code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR,\n      message\n    });\n    this.leftToFund = leftToFund;\n    this.name = 'NotEnoughFundsError';\n    this.message = message;\n  }\n\n}\nexport class InvalidAmountError extends BlockstackError {\n  constructor(fees, specifiedAmount) {\n    const message = `Not enough coin to fund fees transaction fees. Fees would be ${fees},` + ` specified spend is  ${specifiedAmount}`;\n    super({\n      code: ERROR_CODES.INVALID_AMOUNT_ERROR,\n      message\n    });\n    this.specifiedAmount = specifiedAmount;\n    this.fees = fees;\n    this.name = 'InvalidAmountError';\n    this.message = message;\n  }\n\n}\nexport class LoginFailedError extends BlockstackError {\n  constructor(reason) {\n    const message = `Failed to login: ${reason}`;\n    super({\n      code: ERROR_CODES.LOGIN_FAILED_ERROR,\n      message\n    });\n    this.message = message;\n    this.name = 'LoginFailedError';\n  }\n\n}\nexport class SignatureVerificationError extends BlockstackError {\n  constructor(reason) {\n    const message = `Failed to verify signature: ${reason}`;\n    super({\n      code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR,\n      message\n    });\n    this.message = message;\n    this.name = 'SignatureVerificationError';\n  }\n\n}\nexport class FailedDecryptionError extends BlockstackError {\n  constructor(message = 'Unable to decrypt cipher object.') {\n    super({\n      code: ERROR_CODES.FAILED_DECRYPTION_ERROR,\n      message\n    });\n    this.message = message;\n    this.name = 'FailedDecryptionError';\n  }\n\n}\nexport class InvalidStateError extends BlockstackError {\n  constructor(message) {\n    super({\n      code: ERROR_CODES.INVALID_STATE,\n      message\n    });\n    this.message = message;\n    this.name = 'InvalidStateError';\n  }\n\n}\nexport class NoSessionDataError extends BlockstackError {\n  constructor(message) {\n    super({\n      code: ERROR_CODES.INVALID_STATE,\n      message\n    });\n    this.message = message;\n    this.name = 'NoSessionDataError';\n  }\n\n}\nexport class GaiaHubError extends BlockstackError {\n  constructor(error, response) {\n    super(error);\n\n    if (response) {\n      this.hubError = {\n        statusCode: response.status,\n        statusText: response.statusText\n      };\n\n      if (typeof response.body === 'string') {\n        this.hubError.message = response.body;\n      } else if (typeof response.body === 'object') {\n        Object.assign(this.hubError, response.body);\n      }\n    }\n  }\n\n}\nexport class DoesNotExist extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.DOES_NOT_EXIST\n    }, response);\n    this.name = 'DoesNotExist';\n  }\n\n}\nexport class ConflictError extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.CONFLICT_ERROR\n    }, response);\n    this.name = 'ConflictError';\n  }\n\n}\nexport class NotEnoughProofError extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR\n    }, response);\n    this.name = 'NotEnoughProofError';\n  }\n\n}\nexport class BadPathError extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.BAD_PATH_ERROR\n    }, response);\n    this.name = 'BadPathError';\n  }\n\n}\nexport class ValidationError extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.VALIDATION_ERROR\n    }, response);\n    this.name = 'ValidationError';\n  }\n\n}\nexport class PayloadTooLargeError extends GaiaHubError {\n  constructor(message, response, maxUploadByteSize) {\n    super({\n      message,\n      code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR\n    }, response);\n    this.name = 'PayloadTooLargeError';\n    this.maxUploadByteSize = maxUploadByteSize;\n  }\n\n}\nexport class PreconditionFailedError extends GaiaHubError {\n  constructor(message, response) {\n    super({\n      message,\n      code: ERROR_CODES.PRECONDITION_FAILED_ERROR\n    }, response);\n    this.name = 'PreconditionFailedError';\n  }\n\n}","map":{"version":3,"sources":["../../src/errors.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export const ERROR_CODES = {\n    MISSING_PARAMETER: 'missing_parameter',\n    REMOTE_SERVICE_ERROR: 'remote_service_error',\n    INVALID_STATE: 'invalid_state',\n    NO_SESSION_DATA: 'no_session_data',\n    DOES_NOT_EXIST: 'does_not_exist',\n    FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n    INVALID_DID_ERROR: 'invalid_did_error',\n    NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n    INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n    LOGIN_FAILED_ERROR: 'login_failed',\n    SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n    CONFLICT_ERROR: 'conflict_error',\n    NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n    BAD_PATH_ERROR: 'bad_path_error',\n    VALIDATION_ERROR: 'validation_error',\n    PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n    PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n    UNKNOWN: 'unknown',\n};\nObject.freeze(ERROR_CODES);\nexport class BlockstackError extends Error {\n    constructor(error) {\n        super();\n        let message = error.message;\n        let bugDetails = `Error Code: ${error.code}`;\n        let stack = this.stack;\n        if (!stack) {\n            try {\n                throw new Error();\n            }\n            catch (e) {\n                stack = e.stack;\n            }\n        }\n        else {\n            bugDetails += `Stack Trace:\\n${stack}`;\n        }\n        message += `\\nIf you believe this exception is caused by a bug in stacks.js,\n      please file a bug report: https://github.com/blockstack/stacks.js/issues\\n\\n${bugDetails}`;\n        this.message = message;\n        this.code = error.code;\n        this.parameter = error.parameter ? error.parameter : undefined;\n    }\n    toString() {\n        return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n    }\n}\nexport class InvalidParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n        this.name = 'MissingParametersError';\n    }\n}\nexport class MissingParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n        this.name = 'MissingParametersError';\n    }\n}\nexport class RemoteServiceError extends BlockstackError {\n    constructor(response, message = '') {\n        super({ code: ERROR_CODES.REMOTE_SERVICE_ERROR, message });\n        this.response = response;\n    }\n}\nexport class InvalidDIDError extends BlockstackError {\n    constructor(message = '') {\n        super({ code: ERROR_CODES.INVALID_DID_ERROR, message });\n        this.name = 'InvalidDIDError';\n    }\n}\nexport class NotEnoughFundsError extends BlockstackError {\n    constructor(leftToFund) {\n        const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n        super({ code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR, message });\n        this.leftToFund = leftToFund;\n        this.name = 'NotEnoughFundsError';\n        this.message = message;\n    }\n}\nexport class InvalidAmountError extends BlockstackError {\n    constructor(fees, specifiedAmount) {\n        const message = `Not enough coin to fund fees transaction fees. Fees would be ${fees},` +\n            ` specified spend is  ${specifiedAmount}`;\n        super({ code: ERROR_CODES.INVALID_AMOUNT_ERROR, message });\n        this.specifiedAmount = specifiedAmount;\n        this.fees = fees;\n        this.name = 'InvalidAmountError';\n        this.message = message;\n    }\n}\nexport class LoginFailedError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to login: ${reason}`;\n        super({ code: ERROR_CODES.LOGIN_FAILED_ERROR, message });\n        this.message = message;\n        this.name = 'LoginFailedError';\n    }\n}\nexport class SignatureVerificationError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to verify signature: ${reason}`;\n        super({ code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR, message });\n        this.message = message;\n        this.name = 'SignatureVerificationError';\n    }\n}\nexport class FailedDecryptionError extends BlockstackError {\n    constructor(message = 'Unable to decrypt cipher object.') {\n        super({ code: ERROR_CODES.FAILED_DECRYPTION_ERROR, message });\n        this.message = message;\n        this.name = 'FailedDecryptionError';\n    }\n}\nexport class InvalidStateError extends BlockstackError {\n    constructor(message) {\n        super({ code: ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'InvalidStateError';\n    }\n}\nexport class NoSessionDataError extends BlockstackError {\n    constructor(message) {\n        super({ code: ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'NoSessionDataError';\n    }\n}\nexport class GaiaHubError extends BlockstackError {\n    constructor(error, response) {\n        super(error);\n        if (response) {\n            this.hubError = {\n                statusCode: response.status,\n                statusText: response.statusText,\n            };\n            if (typeof response.body === 'string') {\n                this.hubError.message = response.body;\n            }\n            else if (typeof response.body === 'object') {\n                Object.assign(this.hubError, response.body);\n            }\n        }\n    }\n}\nexport class DoesNotExist extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.DOES_NOT_EXIST }, response);\n        this.name = 'DoesNotExist';\n    }\n}\nexport class ConflictError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.CONFLICT_ERROR }, response);\n        this.name = 'ConflictError';\n    }\n}\nexport class NotEnoughProofError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR }, response);\n        this.name = 'NotEnoughProofError';\n    }\n}\nexport class BadPathError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.BAD_PATH_ERROR }, response);\n        this.name = 'BadPathError';\n    }\n}\nexport class ValidationError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.VALIDATION_ERROR }, response);\n        this.name = 'ValidationError';\n    }\n}\nexport class PayloadTooLargeError extends GaiaHubError {\n    constructor(message, response, maxUploadByteSize) {\n        super({ message, code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR }, response);\n        this.name = 'PayloadTooLargeError';\n        this.maxUploadByteSize = maxUploadByteSize;\n    }\n}\nexport class PreconditionFailedError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.PRECONDITION_FAILED_ERROR }, response);\n        this.name = 'PreconditionFailedError';\n    }\n}\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"module"}