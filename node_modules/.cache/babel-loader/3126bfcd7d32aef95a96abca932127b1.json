{"ast":null,"code":"import { Logger } from './logger';\nimport { Buffer as BufferPolyfill } from 'buffer/';\nimport BN from 'bn.js';\nconst AvailableBufferModule = typeof Buffer !== 'undefined' ? Buffer : BufferPolyfill;\nexport { AvailableBufferModule as Buffer };\nexport const BLOCKSTACK_HANDLER = 'blockstack';\nexport function nextYear() {\n  return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\nexport function nextMonth() {\n  return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\nexport function nextHour() {\n  return new Date(new Date().setHours(new Date().getHours() + 1));\n}\nexport function megabytesToBytes(megabytes) {\n  if (!Number.isFinite(megabytes)) {\n    return 0;\n  }\n\n  return Math.floor(megabytes * 1024 * 1024);\n}\nexport function getAesCbcOutputLength(inputByteLength) {\n  const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n  return cipherTextLength;\n}\nexport function getBase64OutputLength(inputByteLength) {\n  const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n  return encodedLength;\n}\nexport function updateQueryStringParameter(uri, key, value) {\n  const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n\n  if (uri.match(re)) {\n    return uri.replace(re, `$1${key}=${value}$2`);\n  } else {\n    return `${uri}${separator}${key}=${value}`;\n  }\n}\nexport function isLaterVersion(v1, v2) {\n  if (v1 === undefined || v1 === '') {\n    v1 = '0.0.0';\n  }\n\n  if (v2 === undefined || v1 === '') {\n    v2 = '0.0.0';\n  }\n\n  const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n  const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n\n  for (let index = 0; index < v2.length; index++) {\n    if (index >= v1.length) {\n      v2tuple.push(0);\n    }\n\n    if (v1tuple[index] < v2tuple[index]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function makeUUID4() {\n  let d = new Date().getTime();\n\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n    d += performance.now();\n  }\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n}\nexport function isSameOriginAbsoluteUrl(uri1, uri2) {\n  try {\n    const parsedUri1 = new URL(uri1);\n    const parsedUri2 = new URL(uri2);\n    const port1 = parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n    const port2 = parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n    const match = {\n      scheme: parsedUri1.protocol === parsedUri2.protocol,\n      hostname: parsedUri1.hostname === parsedUri2.hostname,\n      port: port1 === port2,\n      absolute: (uri1.includes('http://') || uri1.includes('https://')) && (uri2.includes('http://') || uri2.includes('https://'))\n    };\n    return match.scheme && match.hostname && match.port && match.absolute;\n  } catch (error) {\n    console.log(error);\n    console.log('Parsing error in same URL origin check');\n    return false;\n  }\n}\nexport function getGlobalScope() {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available');\n}\n\nfunction getAPIUsageErrorMessage(scopeObject, apiName, usageDesc) {\n  if (usageDesc) {\n    return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  } else {\n    return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  }\n}\n\nexport function getGlobalObject(name, {\n  throwIfUnavailable,\n  usageDesc,\n  returnEmptyObject\n} = {}) {\n  let globalScope = undefined;\n\n  try {\n    globalScope = getGlobalScope();\n\n    if (globalScope) {\n      const obj = globalScope[name];\n\n      if (obj) {\n        return obj;\n      }\n    }\n  } catch (error) {\n    Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n  }\n\n  if (throwIfUnavailable) {\n    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n    Logger.error(errMsg);\n    throw new Error(errMsg);\n  }\n\n  if (returnEmptyObject) {\n    return {};\n  }\n\n  return undefined;\n}\nexport function getGlobalObjects(names, {\n  throwIfUnavailable,\n  usageDesc,\n  returnEmptyObject\n} = {}) {\n  let globalScope;\n\n  try {\n    globalScope = getGlobalScope();\n  } catch (error) {\n    Logger.error(`Error getting global scope: ${error}`);\n\n    if (throwIfUnavailable) {\n      const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n      Logger.error(errMsg);\n      throw errMsg;\n    } else if (returnEmptyObject) {\n      globalScope = {};\n    }\n  }\n\n  const result = {};\n\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n\n    try {\n      if (globalScope) {\n        const obj = globalScope[name];\n\n        if (obj) {\n          result[name] = obj;\n        } else if (throwIfUnavailable) {\n          const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n          Logger.error(errMsg);\n          throw new Error(errMsg);\n        } else if (returnEmptyObject) {\n          result[name] = {};\n        }\n      }\n    } catch (error) {\n      if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(errMsg);\n        throw new Error(errMsg);\n      }\n    }\n  }\n\n  return result;\n}\nexport function intToBytes(value, signed, byteLength) {\n  return intToBN(value, signed).toArrayLike(AvailableBufferModule, 'be', byteLength);\n}\nexport function intToBN(value, signed) {\n  const bigInt = intToBigInt(value, signed);\n  return new BN(bigInt.toString());\n}\nexport function intToBigInt(value, signed) {\n  if (typeof value === 'number') {\n    if (!Number.isInteger(value)) {\n      throw new RangeError(`Invalid value. Values of type 'number' must be an integer.`);\n    }\n\n    return BigInt(value);\n  }\n\n  if (typeof value === 'string') {\n    if (value.toLowerCase().startsWith('0x')) {\n      let hex = value.slice(2);\n      hex = hex.padStart(hex.length + hex.length % 2, '0');\n      value = AvailableBufferModule.from(hex, 'hex');\n    } else {\n      try {\n        return BigInt(value);\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          throw new RangeError(`Invalid value. String integer '${value}' is not finite.`);\n        }\n      }\n    }\n  }\n\n  if (typeof value === 'bigint') {\n    return value;\n  }\n\n  if (value instanceof Uint8Array || BufferPolyfill.isBuffer(value)) {\n    if (signed) {\n      const bn = new BN(value, 'be').fromTwos(value.byteLength * 8);\n      return BigInt(bn.toString());\n    } else {\n      return BigInt(new BN(value, 'be').toString());\n    }\n  }\n\n  if (value instanceof BN || BN.isBN(value)) {\n    return BigInt(value.toString());\n  }\n\n  throw new TypeError(`Invalid value type. Must be a number, bigint, integer-string, hex-string, BN.js instance, or Buffer.`);\n}\nexport function with0x(value) {\n  return !value.startsWith('0x') ? `0x${value}` : value;\n}","map":{"version":3,"sources":["../../src/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Logger } from './logger';\nimport { Buffer as BufferPolyfill } from 'buffer/';\nimport BN from 'bn.js';\nconst AvailableBufferModule = typeof Buffer !== 'undefined' ? Buffer : BufferPolyfill;\nexport { AvailableBufferModule as Buffer };\nexport const BLOCKSTACK_HANDLER = 'blockstack';\nexport function nextYear() {\n    return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\nexport function nextMonth() {\n    return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\nexport function nextHour() {\n    return new Date(new Date().setHours(new Date().getHours() + 1));\n}\nexport function megabytesToBytes(megabytes) {\n    if (!Number.isFinite(megabytes)) {\n        return 0;\n    }\n    return Math.floor(megabytes * 1024 * 1024);\n}\nexport function getAesCbcOutputLength(inputByteLength) {\n    const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n    return cipherTextLength;\n}\nexport function getBase64OutputLength(inputByteLength) {\n    const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n    return encodedLength;\n}\nexport function updateQueryStringParameter(uri, key, value) {\n    const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n    const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n    if (uri.match(re)) {\n        return uri.replace(re, `$1${key}=${value}$2`);\n    }\n    else {\n        return `${uri}${separator}${key}=${value}`;\n    }\n}\nexport function isLaterVersion(v1, v2) {\n    if (v1 === undefined || v1 === '') {\n        v1 = '0.0.0';\n    }\n    if (v2 === undefined || v1 === '') {\n        v2 = '0.0.0';\n    }\n    const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n    const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n    for (let index = 0; index < v2.length; index++) {\n        if (index >= v1.length) {\n            v2tuple.push(0);\n        }\n        if (v1tuple[index] < v2tuple[index]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function makeUUID4() {\n    let d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now();\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n}\nexport function isSameOriginAbsoluteUrl(uri1, uri2) {\n    try {\n        const parsedUri1 = new URL(uri1);\n        const parsedUri2 = new URL(uri2);\n        const port1 = parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n        const port2 = parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n        const match = {\n            scheme: parsedUri1.protocol === parsedUri2.protocol,\n            hostname: parsedUri1.hostname === parsedUri2.hostname,\n            port: port1 === port2,\n            absolute: (uri1.includes('http://') || uri1.includes('https://')) &&\n                (uri2.includes('http://') || uri2.includes('https://')),\n        };\n        return match.scheme && match.hostname && match.port && match.absolute;\n    }\n    catch (error) {\n        console.log(error);\n        console.log('Parsing error in same URL origin check');\n        return false;\n    }\n}\nexport function getGlobalScope() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available');\n}\nfunction getAPIUsageErrorMessage(scopeObject, apiName, usageDesc) {\n    if (usageDesc) {\n        return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n    else {\n        return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n}\nexport function getGlobalObject(name, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope = undefined;\n    try {\n        globalScope = getGlobalScope();\n        if (globalScope) {\n            const obj = globalScope[name];\n            if (obj) {\n                return obj;\n            }\n        }\n    }\n    catch (error) {\n        Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n    }\n    if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(errMsg);\n        throw new Error(errMsg);\n    }\n    if (returnEmptyObject) {\n        return {};\n    }\n    return undefined;\n}\nexport function getGlobalObjects(names, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope;\n    try {\n        globalScope = getGlobalScope();\n    }\n    catch (error) {\n        Logger.error(`Error getting global scope: ${error}`);\n        if (throwIfUnavailable) {\n            const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n            Logger.error(errMsg);\n            throw errMsg;\n        }\n        else if (returnEmptyObject) {\n            globalScope = {};\n        }\n    }\n    const result = {};\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        try {\n            if (globalScope) {\n                const obj = globalScope[name];\n                if (obj) {\n                    result[name] = obj;\n                }\n                else if (throwIfUnavailable) {\n                    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                    Logger.error(errMsg);\n                    throw new Error(errMsg);\n                }\n                else if (returnEmptyObject) {\n                    result[name] = {};\n                }\n            }\n        }\n        catch (error) {\n            if (throwIfUnavailable) {\n                const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                Logger.error(errMsg);\n                throw new Error(errMsg);\n            }\n        }\n    }\n    return result;\n}\nexport function intToBytes(value, signed, byteLength) {\n    return intToBN(value, signed).toArrayLike(AvailableBufferModule, 'be', byteLength);\n}\nexport function intToBN(value, signed) {\n    const bigInt = intToBigInt(value, signed);\n    return new BN(bigInt.toString());\n}\nexport function intToBigInt(value, signed) {\n    if (typeof value === 'number') {\n        if (!Number.isInteger(value)) {\n            throw new RangeError(`Invalid value. Values of type 'number' must be an integer.`);\n        }\n        return BigInt(value);\n    }\n    if (typeof value === 'string') {\n        if (value.toLowerCase().startsWith('0x')) {\n            let hex = value.slice(2);\n            hex = hex.padStart(hex.length + (hex.length % 2), '0');\n            value = AvailableBufferModule.from(hex, 'hex');\n        }\n        else {\n            try {\n                return BigInt(value);\n            }\n            catch (error) {\n                if (error instanceof SyntaxError) {\n                    throw new RangeError(`Invalid value. String integer '${value}' is not finite.`);\n                }\n            }\n        }\n    }\n    if (typeof value === 'bigint') {\n        return value;\n    }\n    if (value instanceof Uint8Array || BufferPolyfill.isBuffer(value)) {\n        if (signed) {\n            const bn = new BN(value, 'be').fromTwos(value.byteLength * 8);\n            return BigInt(bn.toString());\n        }\n        else {\n            return BigInt(new BN(value, 'be').toString());\n        }\n    }\n    if (value instanceof BN || BN.isBN(value)) {\n        return BigInt(value.toString());\n    }\n    throw new TypeError(`Invalid value type. Must be a number, bigint, integer-string, hex-string, BN.js instance, or Buffer.`);\n}\nexport function with0x(value) {\n    return !value.startsWith('0x') ? `0x${value}` : value;\n}\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}