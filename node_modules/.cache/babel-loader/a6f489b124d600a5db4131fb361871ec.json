{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hashSha256 = exports.sha256 = exports.sha256nodeCrypto = exports.sha256js = void 0;\n\nvar buffer_1 = require(\"buffer/\");\n/**\n * From https://github.com/crypto-browserify/sha.js/blob/master/sha256.js\n *\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\n\nvar sha256js = function () {\n  function sha256js() {\n    this._blockSize = 64;\n    this._finalSize = 56;\n    this._len = 0;\n    this._w = new Array(64);\n    this._a = 0x6a09e667;\n    this._b = 0xbb67ae85;\n    this._c = 0x3c6ef372;\n    this._d = 0xa54ff53a;\n    this._e = 0x510e527f;\n    this._f = 0x9b05688c;\n    this._g = 0x1f83d9ab;\n    this._h = 0x5be0cd19;\n    this._block = buffer_1.Buffer.alloc(this._blockSize);\n  }\n\n  sha256js.prototype.update = function (data, encoding) {\n    if (typeof data === 'string') {\n      encoding = encoding || 'utf8';\n      data = buffer_1.Buffer.from(data, encoding);\n    }\n\n    var block = this._block;\n    var blockSize = this._blockSize;\n    var length = data.length;\n    var accum = this._len;\n\n    for (var offset = 0; offset < length;) {\n      var assigned = accum % blockSize;\n      var remainder = Math.min(length - offset, blockSize - assigned);\n\n      for (var i = 0; i < remainder; i++) {\n        block[assigned + i] = data[offset + i];\n      }\n\n      accum += remainder;\n      offset += remainder;\n\n      if (accum % blockSize === 0) {\n        this._update(block);\n      }\n    }\n\n    this._len += length;\n    return this;\n  };\n\n  sha256js.prototype.digest = function (encoding) {\n    var rem = this._len % this._blockSize;\n    this._block[rem] = 0x80; // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n    // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n\n    this._block.fill(0, rem + 1);\n\n    if (rem >= this._finalSize) {\n      this._update(this._block);\n\n      this._block.fill(0);\n    }\n\n    var bits = this._len * 8; // uint32\n\n    if (bits <= 0xffffffff) {\n      this._block.writeUInt32BE(bits, this._blockSize - 4); // uint64\n\n    } else {\n      var lowBits = (bits & 0xffffffff) >>> 0;\n      var highBits = (bits - lowBits) / 0x100000000;\n\n      this._block.writeUInt32BE(highBits, this._blockSize - 8);\n\n      this._block.writeUInt32BE(lowBits, this._blockSize - 4);\n    }\n\n    this._update(this._block);\n\n    var hash = buffer_1.Buffer.alloc(32);\n    hash.writeInt32BE(this._a, 0);\n    hash.writeInt32BE(this._b, 4);\n    hash.writeInt32BE(this._c, 8);\n    hash.writeInt32BE(this._d, 12);\n    hash.writeInt32BE(this._e, 16);\n    hash.writeInt32BE(this._f, 20);\n    hash.writeInt32BE(this._g, 24);\n    hash.writeInt32BE(this._h, 28);\n    return encoding ? hash.toString(encoding) : hash;\n  };\n\n  sha256js.prototype.ch = function (x, y, z) {\n    return z ^ x & (y ^ z);\n  };\n\n  sha256js.prototype.maj = function (x, y, z) {\n    return x & y | z & (x | y);\n  };\n\n  sha256js.prototype.sigma0 = function (x) {\n    return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);\n  };\n\n  sha256js.prototype.sigma1 = function (x) {\n    return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);\n  };\n\n  sha256js.prototype.gamma0 = function (x) {\n    return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ x >>> 3;\n  };\n\n  sha256js.prototype.gamma1 = function (x) {\n    return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ x >>> 10;\n  };\n\n  sha256js.prototype._update = function (M) {\n    var W = this._w;\n    var a = this._a | 0;\n    var b = this._b | 0;\n    var c = this._c | 0;\n    var d = this._d | 0;\n    var e = this._e | 0;\n    var f = this._f | 0;\n    var g = this._g | 0;\n    var h = this._h | 0;\n    var i = 0;\n\n    for (; i < 16; ++i) W[i] = M.readInt32BE(i * 4);\n\n    for (; i < 64; ++i) W[i] = this.gamma1(W[i - 2]) + W[i - 7] + this.gamma0(W[i - 15]) + W[i - 16] | 0;\n\n    for (var j = 0; j < 64; ++j) {\n      var T1 = h + this.sigma1(e) + this.ch(e, f, g) + sha256js.K[j] + W[j] | 0;\n      var T2 = this.sigma0(a) + this.maj(a, b, c) | 0;\n      h = g;\n      g = f;\n      f = e;\n      e = d + T1 | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = T1 + T2 | 0;\n    }\n\n    this._a = a + this._a | 0;\n    this._b = b + this._b | 0;\n    this._c = c + this._c | 0;\n    this._d = d + this._d | 0;\n    this._e = e + this._e | 0;\n    this._f = f + this._f | 0;\n    this._g = g + this._g | 0;\n    this._h = h + this._h | 0;\n  };\n\n  sha256js.K = [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2];\n  return sha256js;\n}();\n\nexports.sha256js = sha256js;\n\nvar sha256nodeCrypto = function () {\n  function sha256nodeCrypto() {\n    this.hash = require('crypto').createHash('sha256');\n  }\n\n  sha256nodeCrypto.prototype.update = function (data, encoding) {\n    this.hash.update(data, encoding);\n    return this;\n  };\n\n  sha256nodeCrypto.prototype.digest = function (encoding) {\n    if (encoding) {\n      return this.hash.digest(encoding);\n    } else {\n      return this.hash.digest();\n    }\n  };\n\n  return sha256nodeCrypto;\n}();\n\nexports.sha256nodeCrypto = sha256nodeCrypto;\n\nfunction isNodeCryptoAvailable() {\n  try {\n    if (typeof require === 'function') {\n      var cryptoModule = require('crypto');\n\n      return cryptoModule && typeof cryptoModule.createHash === 'function';\n    }\n  } catch (error) {// ignore\n  }\n\n  return false;\n}\n\nvar sha256 = function () {\n  function sha256() {\n    if (isNodeCryptoAvailable()) {\n      this.instance = new sha256nodeCrypto();\n    } else {\n      this.instance = new sha256js();\n    }\n  }\n\n  sha256.prototype.update = function (data, encoding) {\n    this.instance.update(data, encoding);\n    return this;\n  };\n\n  sha256.prototype.digest = function (encoding) {\n    if (encoding) {\n      return this.instance.digest(encoding);\n    } else {\n      return this.instance.digest();\n    }\n  };\n\n  return sha256;\n}();\n\nexports.sha256 = sha256;\n/**\n * Use Nodejs `crypto` module if available, otherwise uses js implementation.\n * @param data Input data to hash.\n */\n\nfunction hashSha256(data) {\n  return new sha256().update(data).digest();\n}\n\nexports.hashSha256 = hashSha256;\nexports.default = hashSha256;","map":{"version":3,"sources":["/Users/abdulhaseeb/Work/connectapp/my-app/node_modules/cross-sha256/index.js"],"names":["Object","defineProperty","exports","value","hashSha256","sha256","sha256nodeCrypto","sha256js","buffer_1","require","_blockSize","_finalSize","_len","_w","Array","_a","_b","_c","_d","_e","_f","_g","_h","_block","Buffer","alloc","prototype","update","data","encoding","from","block","blockSize","length","accum","offset","assigned","remainder","Math","min","i","_update","digest","rem","fill","bits","writeUInt32BE","lowBits","highBits","hash","writeInt32BE","toString","ch","x","y","z","maj","sigma0","sigma1","gamma0","gamma1","M","W","a","b","c","d","e","f","g","h","readInt32BE","j","T1","K","T2","createHash","isNodeCryptoAvailable","cryptoModule","error","instance","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashSha256 = exports.sha256 = exports.sha256nodeCrypto = exports.sha256js = void 0;\nvar buffer_1 = require(\"buffer/\");\n/**\n * From https://github.com/crypto-browserify/sha.js/blob/master/sha256.js\n *\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\nvar sha256js = /** @class */ (function () {\n    function sha256js() {\n        this._blockSize = 64;\n        this._finalSize = 56;\n        this._len = 0;\n        this._w = new Array(64);\n        this._a = 0x6a09e667;\n        this._b = 0xbb67ae85;\n        this._c = 0x3c6ef372;\n        this._d = 0xa54ff53a;\n        this._e = 0x510e527f;\n        this._f = 0x9b05688c;\n        this._g = 0x1f83d9ab;\n        this._h = 0x5be0cd19;\n        this._block = buffer_1.Buffer.alloc(this._blockSize);\n    }\n    sha256js.prototype.update = function (data, encoding) {\n        if (typeof data === 'string') {\n            encoding = encoding || 'utf8';\n            data = buffer_1.Buffer.from(data, encoding);\n        }\n        var block = this._block;\n        var blockSize = this._blockSize;\n        var length = data.length;\n        var accum = this._len;\n        for (var offset = 0; offset < length;) {\n            var assigned = accum % blockSize;\n            var remainder = Math.min(length - offset, blockSize - assigned);\n            for (var i = 0; i < remainder; i++) {\n                block[assigned + i] = data[offset + i];\n            }\n            accum += remainder;\n            offset += remainder;\n            if ((accum % blockSize) === 0) {\n                this._update(block);\n            }\n        }\n        this._len += length;\n        return this;\n    };\n    sha256js.prototype.digest = function (encoding) {\n        var rem = this._len % this._blockSize;\n        this._block[rem] = 0x80;\n        // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n        // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n        this._block.fill(0, rem + 1);\n        if (rem >= this._finalSize) {\n            this._update(this._block);\n            this._block.fill(0);\n        }\n        var bits = this._len * 8;\n        // uint32\n        if (bits <= 0xffffffff) {\n            this._block.writeUInt32BE(bits, this._blockSize - 4);\n            // uint64\n        }\n        else {\n            var lowBits = (bits & 0xffffffff) >>> 0;\n            var highBits = (bits - lowBits) / 0x100000000;\n            this._block.writeUInt32BE(highBits, this._blockSize - 8);\n            this._block.writeUInt32BE(lowBits, this._blockSize - 4);\n        }\n        this._update(this._block);\n        var hash = buffer_1.Buffer.alloc(32);\n        hash.writeInt32BE(this._a, 0);\n        hash.writeInt32BE(this._b, 4);\n        hash.writeInt32BE(this._c, 8);\n        hash.writeInt32BE(this._d, 12);\n        hash.writeInt32BE(this._e, 16);\n        hash.writeInt32BE(this._f, 20);\n        hash.writeInt32BE(this._g, 24);\n        hash.writeInt32BE(this._h, 28);\n        return encoding ? hash.toString(encoding) : hash;\n    };\n    sha256js.prototype.ch = function (x, y, z) {\n        return z ^ (x & (y ^ z));\n    };\n    sha256js.prototype.maj = function (x, y, z) {\n        return (x & y) | (z & (x | y));\n    };\n    sha256js.prototype.sigma0 = function (x) {\n        return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);\n    };\n    sha256js.prototype.sigma1 = function (x) {\n        return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);\n    };\n    sha256js.prototype.gamma0 = function (x) {\n        return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3);\n    };\n    sha256js.prototype.gamma1 = function (x) {\n        return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10);\n    };\n    sha256js.prototype._update = function (M) {\n        var W = this._w;\n        var a = this._a | 0;\n        var b = this._b | 0;\n        var c = this._c | 0;\n        var d = this._d | 0;\n        var e = this._e | 0;\n        var f = this._f | 0;\n        var g = this._g | 0;\n        var h = this._h | 0;\n        var i = 0;\n        for (; i < 16; ++i)\n            W[i] = M.readInt32BE(i * 4);\n        for (; i < 64; ++i)\n            W[i] = (this.gamma1(W[i - 2]) + W[i - 7] + this.gamma0(W[i - 15]) + W[i - 16]) | 0;\n        for (var j = 0; j < 64; ++j) {\n            var T1 = (h + this.sigma1(e) + this.ch(e, f, g) + sha256js.K[j] + W[j]) | 0;\n            var T2 = (this.sigma0(a) + this.maj(a, b, c)) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + T1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (T1 + T2) | 0;\n        }\n        this._a = (a + this._a) | 0;\n        this._b = (b + this._b) | 0;\n        this._c = (c + this._c) | 0;\n        this._d = (d + this._d) | 0;\n        this._e = (e + this._e) | 0;\n        this._f = (f + this._f) | 0;\n        this._g = (g + this._g) | 0;\n        this._h = (h + this._h) | 0;\n    };\n    sha256js.K = [\n        0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n        0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n        0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n        0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n        0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n        0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n        0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n        0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n        0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n        0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n        0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n        0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n        0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n        0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n        0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n        0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n    ];\n    return sha256js;\n}());\nexports.sha256js = sha256js;\nvar sha256nodeCrypto = /** @class */ (function () {\n    function sha256nodeCrypto() {\n        this.hash = require('crypto').createHash('sha256');\n    }\n    sha256nodeCrypto.prototype.update = function (data, encoding) {\n        this.hash.update(data, encoding);\n        return this;\n    };\n    sha256nodeCrypto.prototype.digest = function (encoding) {\n        if (encoding) {\n            return this.hash.digest(encoding);\n        }\n        else {\n            return this.hash.digest();\n        }\n    };\n    return sha256nodeCrypto;\n}());\nexports.sha256nodeCrypto = sha256nodeCrypto;\nfunction isNodeCryptoAvailable() {\n    try {\n        if (typeof require === 'function') {\n            var cryptoModule = require('crypto');\n            return cryptoModule && typeof cryptoModule.createHash === 'function';\n        }\n    }\n    catch (error) {\n        // ignore\n    }\n    return false;\n}\nvar sha256 = /** @class */ (function () {\n    function sha256() {\n        if (isNodeCryptoAvailable()) {\n            this.instance = new sha256nodeCrypto();\n        }\n        else {\n            this.instance = new sha256js();\n        }\n    }\n    sha256.prototype.update = function (data, encoding) {\n        this.instance.update(data, encoding);\n        return this;\n    };\n    sha256.prototype.digest = function (encoding) {\n        if (encoding) {\n            return this.instance.digest(encoding);\n        }\n        else {\n            return this.instance.digest();\n        }\n    };\n    return sha256;\n}());\nexports.sha256 = sha256;\n/**\n * Use Nodejs `crypto` module if available, otherwise uses js implementation.\n * @param data Input data to hash.\n */\nfunction hashSha256(data) {\n    return new sha256().update(data).digest();\n}\nexports.hashSha256 = hashSha256;\nexports.default = hashSha256;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}