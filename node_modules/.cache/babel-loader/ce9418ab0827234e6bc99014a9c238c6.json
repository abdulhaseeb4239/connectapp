{"ast":null,"code":"import { DEFAULT_SCOPE, DEFAULT_BLOCKSTACK_HOST } from './constants';\nimport { getGlobalObject } from '@stacks/common';\nexport class AppConfig {\n  constructor(scopes, appDomain, redirectPath, manifestPath, coreNode, authenticatorURL) {\n    var _a;\n\n    if (scopes === void 0) {\n      scopes = DEFAULT_SCOPE.slice();\n    }\n\n    if (appDomain === void 0) {\n      appDomain = (_a = getGlobalObject('location', {\n        returnEmptyObject: true\n      })) === null || _a === void 0 ? void 0 : _a.origin;\n    }\n\n    if (redirectPath === void 0) {\n      redirectPath = '';\n    }\n\n    if (manifestPath === void 0) {\n      manifestPath = '/manifest.json';\n    }\n\n    if (coreNode === void 0) {\n      coreNode = undefined;\n    }\n\n    if (authenticatorURL === void 0) {\n      authenticatorURL = DEFAULT_BLOCKSTACK_HOST;\n    }\n\n    this.appDomain = appDomain;\n    this.scopes = scopes;\n    this.redirectPath = redirectPath;\n    this.manifestPath = manifestPath;\n    this.coreNode = coreNode;\n    this.authenticatorURL = authenticatorURL;\n  }\n\n  redirectURI() {\n    return `${this.appDomain}${this.redirectPath}`;\n  }\n\n  manifestURI() {\n    return `${this.appDomain}${this.manifestPath}`;\n  }\n\n}","map":{"version":3,"sources":["../../src/appConfig.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,EAAwB,uBAAxB,QAAkE,aAAlE;AACA,SAAS,eAAT,QAAgC,gBAAhC;AAYA,OAAM,MAAO,SAAP,CAAgB;AAsDpB,EAAA,WAAA,CACE,MADF,EAEE,SAFF,EAIE,YAJF,EAKE,YALF,EAME,QANF,EAOE,gBAPF,EAOoD;;;2BANlD;AAAA,MAAA,MAAA,GAAmB,aAAa,CAAC,KAAd,EAAnB;AAAwC;;8BACxC;AAAA,MAAA,SAAA,GAAA,CAAA,EAAA,GAAgC,eAAe,CAAC,UAAD,EAAa;AAAE,QAAA,iBAAiB,EAAE;AAArB,OAAb,CAA/C,MAAwF,IAAxF,IAAwF,EAAA,KAAA,KAAA,CAAxF,GAAwF,KAAA,CAAxF,GAAwF,EAAA,CACpF,MADJ;AACU;;iCACV;AAAA,MAAA,YAAA,GAAA,EAAA;AAAiB;;iCACjB;AAAA,MAAA,YAAA,GAAA,gBAAA;AAA+B;;6BAC/B;AAAA,MAAA,QAAA,GAAA,SAAA;AAAwC;;qCACxC;AAAA,MAAA,gBAAA,GAAA,uBAAA;AAAkD;;AAElD,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,gBAAL,GAAwB,gBAAxB;AACD;;AAOD,EAAA,WAAW,GAAA;AACT,WAAO,GAAG,KAAK,SAAS,GAAG,KAAK,YAAY,EAA5C;AACD;;AAMD,EAAA,WAAW,GAAA;AACT,WAAO,GAAG,KAAK,SAAS,GAAG,KAAK,YAAY,EAA5C;AACD;;AAtFmB","sourceRoot":"","sourcesContent":["import { DEFAULT_SCOPE, DEFAULT_BLOCKSTACK_HOST } from './constants';\nimport { getGlobalObject } from '@stacks/common';\nexport class AppConfig {\n    constructor(scopes, appDomain, redirectPath, manifestPath, coreNode, authenticatorURL) {\n        var _a;\n        if (scopes === void 0) { scopes = DEFAULT_SCOPE.slice(); }\n        if (appDomain === void 0) { appDomain = (_a = getGlobalObject('location', { returnEmptyObject: true })) === null || _a === void 0 ? void 0 : _a.origin; }\n        if (redirectPath === void 0) { redirectPath = ''; }\n        if (manifestPath === void 0) { manifestPath = '/manifest.json'; }\n        if (coreNode === void 0) { coreNode = undefined; }\n        if (authenticatorURL === void 0) { authenticatorURL = DEFAULT_BLOCKSTACK_HOST; }\n        this.appDomain = appDomain;\n        this.scopes = scopes;\n        this.redirectPath = redirectPath;\n        this.manifestPath = manifestPath;\n        this.coreNode = coreNode;\n        this.authenticatorURL = authenticatorURL;\n    }\n    redirectURI() {\n        return `${this.appDomain}${this.redirectPath}`;\n    }\n    manifestURI() {\n        return `${this.appDomain}${this.manifestPath}`;\n    }\n}\n//# sourceMappingURL=appConfig.js.map"]},"metadata":{},"sourceType":"module"}