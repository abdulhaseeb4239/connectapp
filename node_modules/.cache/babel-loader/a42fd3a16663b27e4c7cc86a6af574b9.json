{"ast":null,"code":"var ChainID;\n\n(function (ChainID) {\n  ChainID[ChainID[\"Testnet\"] = 2147483648] = \"Testnet\";\n  ChainID[ChainID[\"Mainnet\"] = 1] = \"Mainnet\";\n})(ChainID || (ChainID = {}));\n\nconst DEFAULT_CHAIN_ID = ChainID.Mainnet;\nconst MAX_STRING_LENGTH_BYTES = 128;\nconst CLARITY_INT_SIZE = 128;\nconst CLARITY_INT_BYTE_SIZE = 16;\nconst COINBASE_BUFFER_LENGTH_BYTES = 32;\nconst RECOVERABLE_ECDSA_SIG_LENGTH_BYTES = 65;\nconst COMPRESSED_PUBKEY_LENGTH_BYTES = 32;\nconst UNCOMPRESSED_PUBKEY_LENGTH_BYTES = 64;\nconst MEMO_MAX_LENGTH_BYTES = 34;\nconst DEFAULT_CORE_NODE_API_URL = 'https://stacks-node-api.mainnet.stacks.co';\nvar StacksMessageType;\n\n(function (StacksMessageType) {\n  StacksMessageType[StacksMessageType[\"Address\"] = 0] = \"Address\";\n  StacksMessageType[StacksMessageType[\"Principal\"] = 1] = \"Principal\";\n  StacksMessageType[StacksMessageType[\"LengthPrefixedString\"] = 2] = \"LengthPrefixedString\";\n  StacksMessageType[StacksMessageType[\"MemoString\"] = 3] = \"MemoString\";\n  StacksMessageType[StacksMessageType[\"AssetInfo\"] = 4] = \"AssetInfo\";\n  StacksMessageType[StacksMessageType[\"PostCondition\"] = 5] = \"PostCondition\";\n  StacksMessageType[StacksMessageType[\"PublicKey\"] = 6] = \"PublicKey\";\n  StacksMessageType[StacksMessageType[\"LengthPrefixedList\"] = 7] = \"LengthPrefixedList\";\n  StacksMessageType[StacksMessageType[\"Payload\"] = 8] = \"Payload\";\n  StacksMessageType[StacksMessageType[\"MessageSignature\"] = 9] = \"MessageSignature\";\n  StacksMessageType[StacksMessageType[\"TransactionAuthField\"] = 10] = \"TransactionAuthField\";\n})(StacksMessageType || (StacksMessageType = {}));\n\nvar PayloadType;\n\n(function (PayloadType) {\n  PayloadType[PayloadType[\"TokenTransfer\"] = 0] = \"TokenTransfer\";\n  PayloadType[PayloadType[\"SmartContract\"] = 1] = \"SmartContract\";\n  PayloadType[PayloadType[\"ContractCall\"] = 2] = \"ContractCall\";\n  PayloadType[PayloadType[\"PoisonMicroblock\"] = 3] = \"PoisonMicroblock\";\n  PayloadType[PayloadType[\"Coinbase\"] = 4] = \"Coinbase\";\n})(PayloadType || (PayloadType = {}));\n\nvar AnchorMode;\n\n(function (AnchorMode) {\n  AnchorMode[AnchorMode[\"OnChainOnly\"] = 1] = \"OnChainOnly\";\n  AnchorMode[AnchorMode[\"OffChainOnly\"] = 2] = \"OffChainOnly\";\n  AnchorMode[AnchorMode[\"Any\"] = 3] = \"Any\";\n})(AnchorMode || (AnchorMode = {}));\n\nvar TransactionVersion;\n\n(function (TransactionVersion) {\n  TransactionVersion[TransactionVersion[\"Mainnet\"] = 0] = \"Mainnet\";\n  TransactionVersion[TransactionVersion[\"Testnet\"] = 128] = \"Testnet\";\n})(TransactionVersion || (TransactionVersion = {}));\n\nconst DEFAULT_TRANSACTION_VERSION = TransactionVersion.Mainnet;\nvar PostConditionMode;\n\n(function (PostConditionMode) {\n  PostConditionMode[PostConditionMode[\"Allow\"] = 1] = \"Allow\";\n  PostConditionMode[PostConditionMode[\"Deny\"] = 2] = \"Deny\";\n})(PostConditionMode || (PostConditionMode = {}));\n\nvar PostConditionType;\n\n(function (PostConditionType) {\n  PostConditionType[PostConditionType[\"STX\"] = 0] = \"STX\";\n  PostConditionType[PostConditionType[\"Fungible\"] = 1] = \"Fungible\";\n  PostConditionType[PostConditionType[\"NonFungible\"] = 2] = \"NonFungible\";\n})(PostConditionType || (PostConditionType = {}));\n\nvar AuthType;\n\n(function (AuthType) {\n  AuthType[AuthType[\"Standard\"] = 4] = \"Standard\";\n  AuthType[AuthType[\"Sponsored\"] = 5] = \"Sponsored\";\n})(AuthType || (AuthType = {}));\n\nvar AddressHashMode;\n\n(function (AddressHashMode) {\n  AddressHashMode[AddressHashMode[\"SerializeP2PKH\"] = 0] = \"SerializeP2PKH\";\n  AddressHashMode[AddressHashMode[\"SerializeP2SH\"] = 1] = \"SerializeP2SH\";\n  AddressHashMode[AddressHashMode[\"SerializeP2WPKH\"] = 2] = \"SerializeP2WPKH\";\n  AddressHashMode[AddressHashMode[\"SerializeP2WSH\"] = 3] = \"SerializeP2WSH\";\n})(AddressHashMode || (AddressHashMode = {}));\n\nvar AddressVersion;\n\n(function (AddressVersion) {\n  AddressVersion[AddressVersion[\"MainnetSingleSig\"] = 22] = \"MainnetSingleSig\";\n  AddressVersion[AddressVersion[\"MainnetMultiSig\"] = 20] = \"MainnetMultiSig\";\n  AddressVersion[AddressVersion[\"TestnetSingleSig\"] = 26] = \"TestnetSingleSig\";\n  AddressVersion[AddressVersion[\"TestnetMultiSig\"] = 21] = \"TestnetMultiSig\";\n})(AddressVersion || (AddressVersion = {}));\n\nvar PubKeyEncoding;\n\n(function (PubKeyEncoding) {\n  PubKeyEncoding[PubKeyEncoding[\"Compressed\"] = 0] = \"Compressed\";\n  PubKeyEncoding[PubKeyEncoding[\"Uncompressed\"] = 1] = \"Uncompressed\";\n})(PubKeyEncoding || (PubKeyEncoding = {}));\n\nvar FungibleConditionCode;\n\n(function (FungibleConditionCode) {\n  FungibleConditionCode[FungibleConditionCode[\"Equal\"] = 1] = \"Equal\";\n  FungibleConditionCode[FungibleConditionCode[\"Greater\"] = 2] = \"Greater\";\n  FungibleConditionCode[FungibleConditionCode[\"GreaterEqual\"] = 3] = \"GreaterEqual\";\n  FungibleConditionCode[FungibleConditionCode[\"Less\"] = 4] = \"Less\";\n  FungibleConditionCode[FungibleConditionCode[\"LessEqual\"] = 5] = \"LessEqual\";\n})(FungibleConditionCode || (FungibleConditionCode = {}));\n\nvar NonFungibleConditionCode;\n\n(function (NonFungibleConditionCode) {\n  NonFungibleConditionCode[NonFungibleConditionCode[\"DoesNotOwn\"] = 16] = \"DoesNotOwn\";\n  NonFungibleConditionCode[NonFungibleConditionCode[\"Owns\"] = 17] = \"Owns\";\n})(NonFungibleConditionCode || (NonFungibleConditionCode = {}));\n\nvar PostConditionPrincipalID;\n\n(function (PostConditionPrincipalID) {\n  PostConditionPrincipalID[PostConditionPrincipalID[\"Origin\"] = 1] = \"Origin\";\n  PostConditionPrincipalID[PostConditionPrincipalID[\"Standard\"] = 2] = \"Standard\";\n  PostConditionPrincipalID[PostConditionPrincipalID[\"Contract\"] = 3] = \"Contract\";\n})(PostConditionPrincipalID || (PostConditionPrincipalID = {}));\n\nvar AssetType;\n\n(function (AssetType) {\n  AssetType[AssetType[\"STX\"] = 0] = \"STX\";\n  AssetType[AssetType[\"Fungible\"] = 1] = \"Fungible\";\n  AssetType[AssetType[\"NonFungible\"] = 2] = \"NonFungible\";\n})(AssetType || (AssetType = {}));\n\nvar TxRejectedReason;\n\n(function (TxRejectedReason) {\n  TxRejectedReason[\"Serialization\"] = \"Serialization\";\n  TxRejectedReason[\"Deserialization\"] = \"Deserialization\";\n  TxRejectedReason[\"SignatureValidation\"] = \"SignatureValidation\";\n  TxRejectedReason[\"FeeTooLow\"] = \"FeeTooLow\";\n  TxRejectedReason[\"BadNonce\"] = \"BadNonce\";\n  TxRejectedReason[\"NotEnoughFunds\"] = \"NotEnoughFunds\";\n  TxRejectedReason[\"NoSuchContract\"] = \"NoSuchContract\";\n  TxRejectedReason[\"NoSuchPublicFunction\"] = \"NoSuchPublicFunction\";\n  TxRejectedReason[\"BadFunctionArgument\"] = \"BadFunctionArgument\";\n  TxRejectedReason[\"ContractAlreadyExists\"] = \"ContractAlreadyExists\";\n  TxRejectedReason[\"PoisonMicroblocksDoNotConflict\"] = \"PoisonMicroblocksDoNotConflict\";\n  TxRejectedReason[\"PoisonMicroblockHasUnknownPubKeyHash\"] = \"PoisonMicroblockHasUnknownPubKeyHash\";\n  TxRejectedReason[\"PoisonMicroblockIsInvalid\"] = \"PoisonMicroblockIsInvalid\";\n  TxRejectedReason[\"BadAddressVersionByte\"] = \"BadAddressVersionByte\";\n  TxRejectedReason[\"NoCoinbaseViaMempool\"] = \"NoCoinbaseViaMempool\";\n  TxRejectedReason[\"ServerFailureNoSuchChainTip\"] = \"ServerFailureNoSuchChainTip\";\n  TxRejectedReason[\"ServerFailureDatabase\"] = \"ServerFailureDatabase\";\n  TxRejectedReason[\"ServerFailureOther\"] = \"ServerFailureOther\";\n})(TxRejectedReason || (TxRejectedReason = {}));\n\nexport { MAX_STRING_LENGTH_BYTES, CLARITY_INT_SIZE, CLARITY_INT_BYTE_SIZE, COINBASE_BUFFER_LENGTH_BYTES, DEFAULT_CHAIN_ID, DEFAULT_TRANSACTION_VERSION, RECOVERABLE_ECDSA_SIG_LENGTH_BYTES, COMPRESSED_PUBKEY_LENGTH_BYTES, UNCOMPRESSED_PUBKEY_LENGTH_BYTES, MEMO_MAX_LENGTH_BYTES, DEFAULT_CORE_NODE_API_URL, ChainID, StacksMessageType, PayloadType, AnchorMode, TransactionVersion, PostConditionMode, PostConditionType, PostConditionPrincipalID, AuthType, AddressHashMode, AddressVersion, PubKeyEncoding, FungibleConditionCode, NonFungibleConditionCode, AssetType, TxRejectedReason };","map":{"version":3,"sources":["../../src/constants.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var ChainID;\n(function (ChainID) {\n    ChainID[ChainID[\"Testnet\"] = 2147483648] = \"Testnet\";\n    ChainID[ChainID[\"Mainnet\"] = 1] = \"Mainnet\";\n})(ChainID || (ChainID = {}));\nconst DEFAULT_CHAIN_ID = ChainID.Mainnet;\nconst MAX_STRING_LENGTH_BYTES = 128;\nconst CLARITY_INT_SIZE = 128;\nconst CLARITY_INT_BYTE_SIZE = 16;\nconst COINBASE_BUFFER_LENGTH_BYTES = 32;\nconst RECOVERABLE_ECDSA_SIG_LENGTH_BYTES = 65;\nconst COMPRESSED_PUBKEY_LENGTH_BYTES = 32;\nconst UNCOMPRESSED_PUBKEY_LENGTH_BYTES = 64;\nconst MEMO_MAX_LENGTH_BYTES = 34;\nconst DEFAULT_CORE_NODE_API_URL = 'https://stacks-node-api.mainnet.stacks.co';\nvar StacksMessageType;\n(function (StacksMessageType) {\n    StacksMessageType[StacksMessageType[\"Address\"] = 0] = \"Address\";\n    StacksMessageType[StacksMessageType[\"Principal\"] = 1] = \"Principal\";\n    StacksMessageType[StacksMessageType[\"LengthPrefixedString\"] = 2] = \"LengthPrefixedString\";\n    StacksMessageType[StacksMessageType[\"MemoString\"] = 3] = \"MemoString\";\n    StacksMessageType[StacksMessageType[\"AssetInfo\"] = 4] = \"AssetInfo\";\n    StacksMessageType[StacksMessageType[\"PostCondition\"] = 5] = \"PostCondition\";\n    StacksMessageType[StacksMessageType[\"PublicKey\"] = 6] = \"PublicKey\";\n    StacksMessageType[StacksMessageType[\"LengthPrefixedList\"] = 7] = \"LengthPrefixedList\";\n    StacksMessageType[StacksMessageType[\"Payload\"] = 8] = \"Payload\";\n    StacksMessageType[StacksMessageType[\"MessageSignature\"] = 9] = \"MessageSignature\";\n    StacksMessageType[StacksMessageType[\"TransactionAuthField\"] = 10] = \"TransactionAuthField\";\n})(StacksMessageType || (StacksMessageType = {}));\nvar PayloadType;\n(function (PayloadType) {\n    PayloadType[PayloadType[\"TokenTransfer\"] = 0] = \"TokenTransfer\";\n    PayloadType[PayloadType[\"SmartContract\"] = 1] = \"SmartContract\";\n    PayloadType[PayloadType[\"ContractCall\"] = 2] = \"ContractCall\";\n    PayloadType[PayloadType[\"PoisonMicroblock\"] = 3] = \"PoisonMicroblock\";\n    PayloadType[PayloadType[\"Coinbase\"] = 4] = \"Coinbase\";\n})(PayloadType || (PayloadType = {}));\nvar AnchorMode;\n(function (AnchorMode) {\n    AnchorMode[AnchorMode[\"OnChainOnly\"] = 1] = \"OnChainOnly\";\n    AnchorMode[AnchorMode[\"OffChainOnly\"] = 2] = \"OffChainOnly\";\n    AnchorMode[AnchorMode[\"Any\"] = 3] = \"Any\";\n})(AnchorMode || (AnchorMode = {}));\nvar TransactionVersion;\n(function (TransactionVersion) {\n    TransactionVersion[TransactionVersion[\"Mainnet\"] = 0] = \"Mainnet\";\n    TransactionVersion[TransactionVersion[\"Testnet\"] = 128] = \"Testnet\";\n})(TransactionVersion || (TransactionVersion = {}));\nconst DEFAULT_TRANSACTION_VERSION = TransactionVersion.Mainnet;\nvar PostConditionMode;\n(function (PostConditionMode) {\n    PostConditionMode[PostConditionMode[\"Allow\"] = 1] = \"Allow\";\n    PostConditionMode[PostConditionMode[\"Deny\"] = 2] = \"Deny\";\n})(PostConditionMode || (PostConditionMode = {}));\nvar PostConditionType;\n(function (PostConditionType) {\n    PostConditionType[PostConditionType[\"STX\"] = 0] = \"STX\";\n    PostConditionType[PostConditionType[\"Fungible\"] = 1] = \"Fungible\";\n    PostConditionType[PostConditionType[\"NonFungible\"] = 2] = \"NonFungible\";\n})(PostConditionType || (PostConditionType = {}));\nvar AuthType;\n(function (AuthType) {\n    AuthType[AuthType[\"Standard\"] = 4] = \"Standard\";\n    AuthType[AuthType[\"Sponsored\"] = 5] = \"Sponsored\";\n})(AuthType || (AuthType = {}));\nvar AddressHashMode;\n(function (AddressHashMode) {\n    AddressHashMode[AddressHashMode[\"SerializeP2PKH\"] = 0] = \"SerializeP2PKH\";\n    AddressHashMode[AddressHashMode[\"SerializeP2SH\"] = 1] = \"SerializeP2SH\";\n    AddressHashMode[AddressHashMode[\"SerializeP2WPKH\"] = 2] = \"SerializeP2WPKH\";\n    AddressHashMode[AddressHashMode[\"SerializeP2WSH\"] = 3] = \"SerializeP2WSH\";\n})(AddressHashMode || (AddressHashMode = {}));\nvar AddressVersion;\n(function (AddressVersion) {\n    AddressVersion[AddressVersion[\"MainnetSingleSig\"] = 22] = \"MainnetSingleSig\";\n    AddressVersion[AddressVersion[\"MainnetMultiSig\"] = 20] = \"MainnetMultiSig\";\n    AddressVersion[AddressVersion[\"TestnetSingleSig\"] = 26] = \"TestnetSingleSig\";\n    AddressVersion[AddressVersion[\"TestnetMultiSig\"] = 21] = \"TestnetMultiSig\";\n})(AddressVersion || (AddressVersion = {}));\nvar PubKeyEncoding;\n(function (PubKeyEncoding) {\n    PubKeyEncoding[PubKeyEncoding[\"Compressed\"] = 0] = \"Compressed\";\n    PubKeyEncoding[PubKeyEncoding[\"Uncompressed\"] = 1] = \"Uncompressed\";\n})(PubKeyEncoding || (PubKeyEncoding = {}));\nvar FungibleConditionCode;\n(function (FungibleConditionCode) {\n    FungibleConditionCode[FungibleConditionCode[\"Equal\"] = 1] = \"Equal\";\n    FungibleConditionCode[FungibleConditionCode[\"Greater\"] = 2] = \"Greater\";\n    FungibleConditionCode[FungibleConditionCode[\"GreaterEqual\"] = 3] = \"GreaterEqual\";\n    FungibleConditionCode[FungibleConditionCode[\"Less\"] = 4] = \"Less\";\n    FungibleConditionCode[FungibleConditionCode[\"LessEqual\"] = 5] = \"LessEqual\";\n})(FungibleConditionCode || (FungibleConditionCode = {}));\nvar NonFungibleConditionCode;\n(function (NonFungibleConditionCode) {\n    NonFungibleConditionCode[NonFungibleConditionCode[\"DoesNotOwn\"] = 16] = \"DoesNotOwn\";\n    NonFungibleConditionCode[NonFungibleConditionCode[\"Owns\"] = 17] = \"Owns\";\n})(NonFungibleConditionCode || (NonFungibleConditionCode = {}));\nvar PostConditionPrincipalID;\n(function (PostConditionPrincipalID) {\n    PostConditionPrincipalID[PostConditionPrincipalID[\"Origin\"] = 1] = \"Origin\";\n    PostConditionPrincipalID[PostConditionPrincipalID[\"Standard\"] = 2] = \"Standard\";\n    PostConditionPrincipalID[PostConditionPrincipalID[\"Contract\"] = 3] = \"Contract\";\n})(PostConditionPrincipalID || (PostConditionPrincipalID = {}));\nvar AssetType;\n(function (AssetType) {\n    AssetType[AssetType[\"STX\"] = 0] = \"STX\";\n    AssetType[AssetType[\"Fungible\"] = 1] = \"Fungible\";\n    AssetType[AssetType[\"NonFungible\"] = 2] = \"NonFungible\";\n})(AssetType || (AssetType = {}));\nvar TxRejectedReason;\n(function (TxRejectedReason) {\n    TxRejectedReason[\"Serialization\"] = \"Serialization\";\n    TxRejectedReason[\"Deserialization\"] = \"Deserialization\";\n    TxRejectedReason[\"SignatureValidation\"] = \"SignatureValidation\";\n    TxRejectedReason[\"FeeTooLow\"] = \"FeeTooLow\";\n    TxRejectedReason[\"BadNonce\"] = \"BadNonce\";\n    TxRejectedReason[\"NotEnoughFunds\"] = \"NotEnoughFunds\";\n    TxRejectedReason[\"NoSuchContract\"] = \"NoSuchContract\";\n    TxRejectedReason[\"NoSuchPublicFunction\"] = \"NoSuchPublicFunction\";\n    TxRejectedReason[\"BadFunctionArgument\"] = \"BadFunctionArgument\";\n    TxRejectedReason[\"ContractAlreadyExists\"] = \"ContractAlreadyExists\";\n    TxRejectedReason[\"PoisonMicroblocksDoNotConflict\"] = \"PoisonMicroblocksDoNotConflict\";\n    TxRejectedReason[\"PoisonMicroblockHasUnknownPubKeyHash\"] = \"PoisonMicroblockHasUnknownPubKeyHash\";\n    TxRejectedReason[\"PoisonMicroblockIsInvalid\"] = \"PoisonMicroblockIsInvalid\";\n    TxRejectedReason[\"BadAddressVersionByte\"] = \"BadAddressVersionByte\";\n    TxRejectedReason[\"NoCoinbaseViaMempool\"] = \"NoCoinbaseViaMempool\";\n    TxRejectedReason[\"ServerFailureNoSuchChainTip\"] = \"ServerFailureNoSuchChainTip\";\n    TxRejectedReason[\"ServerFailureDatabase\"] = \"ServerFailureDatabase\";\n    TxRejectedReason[\"ServerFailureOther\"] = \"ServerFailureOther\";\n})(TxRejectedReason || (TxRejectedReason = {}));\nexport { MAX_STRING_LENGTH_BYTES, CLARITY_INT_SIZE, CLARITY_INT_BYTE_SIZE, COINBASE_BUFFER_LENGTH_BYTES, DEFAULT_CHAIN_ID, DEFAULT_TRANSACTION_VERSION, RECOVERABLE_ECDSA_SIG_LENGTH_BYTES, COMPRESSED_PUBKEY_LENGTH_BYTES, UNCOMPRESSED_PUBKEY_LENGTH_BYTES, MEMO_MAX_LENGTH_BYTES, DEFAULT_CORE_NODE_API_URL, ChainID, StacksMessageType, PayloadType, AnchorMode, TransactionVersion, PostConditionMode, PostConditionType, PostConditionPrincipalID, AuthType, AddressHashMode, AddressVersion, PubKeyEncoding, FungibleConditionCode, NonFungibleConditionCode, AssetType, TxRejectedReason, };\n//# sourceMappingURL=constants.js.map"]},"metadata":{},"sourceType":"module"}